
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
     &kp GRAVE  &kp GRAVE           &kp LG(TAB)  &kp LG(GRAVE)  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)                       &mo 3                                                                                                                            &mo 3  &kp LEFT_ARROW            &kp DOWN_ARROW               &kp UP_ARROW  &kp RIGHT_ARROW         &none                         &kp MINUS
       &kp TAB      &kp Q                 &kp W          &kp E                 &kp R                  &kp T                   &kp MINUS                                                                                                                        &kp EQUAL           &kp Y                     &kp U                      &kp I            &kp O         &kp P                          &kp BSLH
 &mt LCTRL ESC      &kp A                 &kp S          &kp D                 &kp F                  &kp G            &kp LEFT_BRACKET                  &mt LCTRL COLON                  &none                          &kp LS(LG(A))  &mt LCTRL ESC  &kp RIGHT_BRACKET           &kp H                     &kp J                      &kp K            &kp L      &kp SEMI                           &kp SQT
     &kp LSHFT      &kp Z                 &kp X          &kp C                 &kp V                  &kp B                                                               &kp RIGHT_PARENTHESIS                  &kp LG(LS(LA(LCTRL)))                                             &kp N                     &kp M                  &kp COMMA          &kp DOT      &kp FSLH  &mt LEFT_SHIFT RIGHT_PARENTHESIS
         &mo 2  &kp GRAVE  &kp LS(LEFT_COMMAND)   &kp LEFT_ALT      &kp LEFT_COMMAND                                           &kp BSPC  &mt LEFT_SHIFT LEFT_PARENTHESIS      &kp LA(LG(LCTRL))                       &kp LS(LC(LALT))    &lt 2 ENTER        &lt 4 SPACE                  &kp LS(LG(LEFT_BRACKET))  &kp LS(LG(RIGHT_BRACKET))        &kp LG(W)  &kp LEFT_ALT                            &tog 5
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                         &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
        &trans      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5             &mo 3                                                   &mo 3         &kp F6         &kp F7         &kp F8         &kp F9        &kp F10  &kp F11
 &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)             &none                                                   &none  &kp LS(KP_N6)  &kp LS(KP_N7)  &kp LS(KP_N8)  &kp LS(KP_N9)  &kp LS(KP_N0)  &kp F12
     &kp GRAVE   &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_N4   &kp KP_N5             &none  &trans  &trans                  &trans  &trans   &none      &kp KP_N6      &kp KP_N7      &kp KP_N8      &kp KP_N9      &kp KP_N0   &trans
        &trans      &trans      &trans      &trans      &trans      &trans                            &trans                  &trans                         &trans         &trans         &trans         &trans         &trans   &trans
        &trans      &trans      &trans      &trans      &trans                        &trans  &trans  &trans                  &trans  &trans  &trans                        &trans         &trans         &trans         &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                 &trans                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_vim {
            bindings = <
 &trans               &trans               &trans  &trans              &trans              &trans            &trans                                                  &trans          &trans             &trans              &trans               &trans  &trans  &trans
 &trans               &trans  &kp LA(RIGHT_ARROW)  &trans              &trans              &trans            &trans                                                  &trans       &kp LG(C)  &macro_newline_up  &kp LG(LEFT_ARROW)  &macro_newline_down  &trans  &trans
 &trans  &kp LG(RIGHT_ARROW)               &trans  &trans              &trans              &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &kp LEFT_ARROW     &kp DOWN_ARROW        &kp UP_ARROW      &kp RIGHT_ARROW  &trans  &trans
 &trans               &trans           &kp DELETE  &trans  &kp LA(LEFT_SHIFT)  &kp LA(LEFT_ARROW)                            &trans                  &trans                          &trans       &kp C_BRI_DN        &kp C_BRI_UP               &trans  &trans  &trans
 &trans               &trans               &trans  &trans              &trans                                &trans  &trans  &trans                  &trans  &trans  &trans                       &kp C_VOL_DN        &kp C_VOL_UP               &trans  &trans  &trans
            >;
        };

        layer_ipad {
            bindings = <
 &trans  &trans  &trans     &trans  &trans  &trans            &trans                                                                          &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans     &trans  &trans  &trans            &trans                                                                          &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans     &trans  &trans  &trans            &trans  &mt RCTRL COLON  &trans                  &trans  &mt RIGHT_CONTROL ESC  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans     &trans  &trans  &trans                                     &trans                  &trans                                 &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &kp LCTRL  &trans                    &trans           &trans  &trans                  &trans                 &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
